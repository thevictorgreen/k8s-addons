#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log 127.0.0.1 local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# enable stats
#---------------------------------------------------------------------
listen stats
  bind    192.168.33.200:9000
  mode    http
  stats   enable
  stats   hide-version
  stats   uri       /stats
  stats   refresh   30s
  stats   realm     Haproxy\ Statistics
  stats   auth      Admin:Password

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend k8s-api
  bind 192.168.33.200:5443
  mode tcp
  option tcplog
  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 }
  default_backend k8s-control-plane

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend k8s-control-plane
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server k8s0.vdigi.local 192.168.33.9:6443 check
  server k8s1.vdigi.local 192.168.33.10:6443 check

#---------------------------------------------------------------------
# traefik-ingress microservice loadbalancer port 80
#---------------------------------------------------------------------
frontend traefik-ingress-80
  bind 192.168.33.200:80
  mode tcp
  option tcplog
  tcp-request inspect-delay 5s
  default_backend k8s-app-80

#---------------------------------------------------------------------
# k8s microservice application port 80
#---------------------------------------------------------------------
backend k8s-app-80
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server k8s0.vdigi.local 192.168.33.9:30337 check
  server k8s1.vdigi.local 192.168.33.10:30337 check

#---------------------------------------------------------------------
# traefik-ingress microservice loadbalancer port 443
#---------------------------------------------------------------------
frontend traefik-ingress-443
  bind 192.168.33.200:443
  mode tcp
  option tcplog
  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 }
  default_backend k8s-app-443

#---------------------------------------------------------------------
# k8s microservice application port 443
#---------------------------------------------------------------------
backend k8s-app-443
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server k8s0.vdigi.local 192.168.33.9:32571 check
  server k8s1.vdigi.local 192.168.33.10:32571 check

#---------------------------------------------------------------------
# traefik-ingress microservice loadbalancer port 8080
#---------------------------------------------------------------------
frontend traefik-ingress-8080
  bind 192.168.33.200:8080
  mode tcp
  option tcplog
  tcp-request inspect-delay 5s
  default_backend traefik-app-8080

#---------------------------------------------------------------------
# traefik microservice application port 8080
#---------------------------------------------------------------------
backend traefik-app-8080
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server k8s0.vdigi.local 192.168.33.9:30086 check
  server k8s1.vdigi.local 192.168.33.10:30086 check
